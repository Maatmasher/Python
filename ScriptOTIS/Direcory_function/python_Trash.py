import threading
import subprocess
from datetime import datetime
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CURRENT_DIR = os.path.dirname(os.path.abspath(__file__))
HOSTS_FILE = os.path.join(CURRENT_DIR, "ip_list.txt")  # –°–ø–∏—Å–æ–∫ —Ö–æ—Å—Ç–æ–≤
LOG_DIR = os.path.join(CURRENT_DIR, "logs")
COMMAND_FILE = os.path.join(CURRENT_DIR, "command.txt")
MAX_THREADS = 7
PLINK_CMD = "plink.exe -ssh {user}@{host} -pw {password} -batch -m {command_txt}"
USER = "tc"
PASSWORD = "JnbcHekbn123"  # –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SSH-–∫–ª—é—á–∏!


def setup_logging():
    """–°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤"""
    os.makedirs(LOG_DIR, exist_ok=True)


def log_message(thread_id, message):
    """–ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥ –ø–æ—Ç–æ–∫–∞"""
    timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    log_entry = f"[{timestamp}] {message}\n"
    print(f"Thread-{thread_id}: {log_entry.strip()}")
    with open(f"{LOG_DIR}/thread_{thread_id}.log", "a", encoding="utf-8") as f:
        f.write(log_entry)


def process_hosts(thread_id, hosts):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ö–æ—Å—Ç–æ–≤ –≤ –æ–¥–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    for host in hosts:
        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ ping
            ping_result = subprocess.run(
                ["ping", "-n", "1", "-w", "1000", host],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                text=True,
            )

            if "TTL=" in ping_result.stdout:
                log_message(thread_id, f"{host} üü¢ Ping —É—Å–ø–µ—à–µ–Ω")

                # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ plink
                cmd = PLINK_CMD.format(user=USER, password=PASSWORD, host=host)
                result = subprocess.run(
                    cmd,
                    shell=True,
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    text=True,
                    timeout=30,
                )

                if result.returncode == 0:
                    log_message(thread_id, f"{host} ‚úÖ –£—Å–ø–µ—à–Ω–æ\n{result.stdout}")
                else:
                    log_message(thread_id, f"{host} ‚ö†Ô∏è –û—à–∏–±–∫–∞\n{result.stderr}")
            else:
                log_message(thread_id, f"{host} üî¥ Ping –Ω–µ –ø—Ä–æ—à–µ–ª")

        except subprocess.TimeoutExpired:
            log_message(thread_id, f"{host} ‚åõ –¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
        except Exception as e:
            log_message(thread_id, f"{host} ‚ÄºÔ∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")


def main():
    setup_logging()

    # –ß—Ç–µ–Ω–∏–µ –∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ö–æ—Å—Ç–æ–≤
    with open(HOSTS_FILE, "r") as f:
        hosts = [line.strip() for line in f if line.strip()]

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 7 —á–∞—Å—Ç–µ–π
    chunk_size = len(hosts) // MAX_THREADS + 1
    chunks = [hosts[i : i + chunk_size] for i in range(0, len(hosts), chunk_size)]

    # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫–æ–≤
    threads = []
    for i, chunk in enumerate(chunks, 1):
        thread = threading.Thread(
            target=process_hosts, args=(i, chunk), name=f"Thread-{i}"
        )
        thread.start()
        threads.append(thread)

    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    for thread in threads:
        thread.join()


if __name__ == "__main__":
    main()
