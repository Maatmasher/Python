"""код выполняет сложную сортировку чисел на основе количества определённых цифр в порядке убывания приоритета (9, 8, 7, ..., 0), с дополнительной сортировкой по самим числам при равенстве количеств цифр."""


def checkio(items: list[int]) -> list[int]:
    return sorted(items, key=lambda n: list(map(str(n).count, "9876543210")) + [n])


print(checkio([1998, 9870, 123, 99, 888]))  # [1998, 99, 9870, 888, 123]
print(checkio([123, 456, 789]))  # [789, 456, 123]
print(checkio([999, 998, 997]))  # [999, 998, 997]
print(checkio([111, 222, 333]))  # [333, 222, 111]

""" Пошаговый разбор:
1. Преобразование числа в строку

    str(n)
Преобразует число в строку для работы с отдельными цифрами
Пример: 123 → "123"

2. Подсчёт цифр в определённом порядке

    map(str(n).count, '9876543210')
Для каждой цифры в строке '9876543210' считает, сколько раз она встречается в числе
str(n).count(digit) возвращает количество вхождений цифры digit в число n

3. Преобразование в список

    list(map(...))
Преобразует результат map в список

Пример для числа 1998:

'9': "1998".count('9') = 2
'8': "1998".count('8') = 1
'7': "1998".count('7') = 0
... и так для всех цифр от 9 до 0

4. Ключ сортировки

    lambda n: list(...) + [n]
Ключ сортировки состоит из двух частей:
Список количеств цифр [9, 8, 7, ..., 0]
Само число [n] """
